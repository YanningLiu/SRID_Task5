# this is an example of the USAR API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: USAR API
  description: Move your app forward with the USAR API
  version: "1.0.0"
# the domain of the service
host: api.usar-cmusv.edu
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /
produces:
  - application/json
paths:
  /communication/getChannels:
    get:
      summary: Communication Channels
      description: |
        The Channels endpoint returns information about the all the team members that the current user can communicate with. The response could also contain group communication channels. The reponse information include name of each communication channel (person's name/person's title/group name).
      parameters:
        - name: username
          in: query
          description: unique username of the current user
          required: true
          type: string
      tags:
        - Channels
      responses:
        '200':
          description: An array of channels
          schema:
            type: array
            items:
              $ref: '#/definitions/Channel'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /communication/getMessages:
    get:
      summary: Communication History
      description: >
        The Communication History endpoint returns all the communication records between two people stored in the system. The communication history could include text messages, video files, image files, voice call recordings. The response information contains sender, receiver, timestamp of each record. For text messages, response contains their content, while for image/video files, response contains its Base64 representation.
      parameters:
        - name: username
          in: query
          description: unique username of the current user.
          required: true
          type: string
        - name: othername
          in: query
          description: username of the other person.
          required: true
          type: string
        - name: startTime
          in: query
          description: start time of the records.
          required: false
          type: string
          format: date-time
        - name: endTime
          in: query
          description: end time of the records.
          required: false
          type: string
          format: date-time
      tags:
        - Messages
      responses:
        '200':
          description: An array of messages between the two users
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /communication/postMessages:
    post:
      summary: Send Message
      description: >-
        The Send Message endpoint stores a new message into the server. The Message contains information regarding sender, receiver, timestamp and possibly text, images, videos. Message is in JSON format during transferring. Images and videos are represented by its Base64 encoding.
      parameters:
        - name: content
          in: body
          required: true
          schema:
            $ref: '#/definitions/Message'
          description: content of the message.
      tags:
        - Messages
      responses:
        '201':
          description: Message has been stored successfully
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /communication/getNotifications:
    get:
      summary: Notification from Teammates
      description: >-
        The Notification endpoint returns information about the notifications sent from teammates. Notifications are to inform the rescuers of the new message/calls. They can also be used as communication history (e.g. at which time started a voice call with whom). It contains notification type (e.g. call, message), sender and timestamp. The notifications are returned in time order.
      parameters:
        - name: username
          in: query
          description: unique username of the current user
          required: true
          type: string
      tags:
        - Notification
      responses:
        '200':
          description: An array of notifications for the current user
          schema:
            type: array
            items:
              $ref: '#/definitions/Notification'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /communication/postNotifications:
    post:
      summary: Send Notifications
      description: >-
        The Notifications endpoint allows users to push notifications to others. The request body contains notification type (e.g. call, message), sender, receiver and timestamp. 
      parameters:
        - name: content
          in: body
          schema:
            $ref: '#/definitions/Notification'
          description: content of the notification.
      tags:
        - Notification
      responses:
        '201':
          description: Notification has been stored successfully
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /reachOutRequests:
    get:
      summary: Get Reach Out Requests
      description: |
        This GET request returns all the Reach Out requests made by the rescuers. The output is primarily used to render these requests on the Alerts page.
      tags:
        - ReachOut
      responses:
        200:
          description: An array of ReachOutRequests
          schema:
            type: array
            items:
              $ref: '#/definitions/ReachOutRequest'
        default:
          description: 'US&R Interval Server Error'
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add New Reach Out Request
      description: |
        This POST request adds a new Reach Out request to the server. These requests can later be used to display the alerts page, and notify other rescuers.
      tags:
        - ReachOut
      consumes:
        - application/json
      produces:
        - text/html
      parameters:
        - name: reporter
          in: body
          required: true
          schema:
            $ref: '#/definitions/ReachOutRequest'
      responses:
        200:
          description: Success
        500:
          description: Error (Missing Input Fields)
  /rescuers:
    get:
      summary: Rescuer Types
      description: |
        The Rescuer endpoint returns information about the *USAR* rescuers
        nearby a given location. The response includes the display name
        and other details about each rescuer, and lists the rescuers in the
        proper display order.
      parameters:
        - name: latitude
          in: query
          description: Latitude component of location.
          required: true
          type: number
          format: double
        - name: longitude
          in: query
          description: Longitude component of location.
          required: true
          type: number
          format: double
      tags:
        - Rescuers
      responses:
        200:
          description: An array of rescuers
          schema:
            type: array
            items:
              $ref: '#/definitions/Rescuer'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /rescuers/{rescuer_id}:
    get:
      summary: Rescuer Types
      description: |
        The Rescuer endpoint returns information about the *USAR* rescuers
        by Rescuer ID. The response includes the display name
        and other details about each rescuer, and lists the rescuers in the
        proper display order.
      parameters:
        - name: rescuer_id
          in: path
          description: Unique identifier of rescuer
          required: true
          type: string
      tags:
        - Rescuers
      responses:
        200:
          description: Rescuer information
          schema:
            $ref: '#/definitions/Rescuer'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /rescuers/{rescuer_id}/history:
    get:
      summary: Rescuer Types
      description: |
        The History endpoint returns health monitor hisotry about
        the *USAR* rescuers by Rescuer ID. The response includes
        a list of health history records.
      parameters:
        - name: rescuer_id
          in: path
          description: Unique identifier of rescuer
          required: true
          type: string
      tags:
        - Rescuers
      responses:
        200:
          description: An array of history records
          schema:
            type: array
            items:
              $ref: '#/definitions/History'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /rescuers/{rescuer_id}/pulse:
    get:
      summary: Rescuer Types
      description: |
        The Pulse endpoint returns pulse hisotry about
        the *USAR* rescuers by Rescuer ID. The response includes
        a list of pulse records.
      parameters:
        - name: rescuer_id
          in: path
          description: Unique identifier of rescuer
          required: true
          type: string
      tags:
        - Rescuers
      responses:
        200:
          description: An array of pulse records
          schema:
            type: array
            items:
              $ref: '#/definitions/Pulse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:

  ReachOutRequest:
    type: object
    properties:
      reporter:
        type: string
        description: Name of the rescuer who submitted the request.
      nMembers:
        type: number
        description: Number of rescuers requested for reach out.
      timeWindow:
        type: number
        description: The time (in minutes) expected for the rescuers to put in, for this request.
      notes:
        type: string
        description: Detailed description of the request scenario.
      location:
        type: string
        format: json
        description: JSON string of Latitude and Longitude
        
  Rescuer:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier representing a specific rescuer.
      description:
        type: string
        description: Description of rescuer.
      display_name:
        type: string
        description: Display name of rescuer.
      latitude:
        type: number
        format: double
        description: Latitude of current location of rescuer.
      longitude:
        type: number
        format: double
        description: Longitude of current location of rescuer.
      phone:
        type: string
        description: Phone number of rescuer
  History:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier representing a specific history.
      description:
        type: string
        description: Description of history record.
      severity_level:
        type: string
        description: Severity level of history record.
        enum: ['normal', 'warning', 'danger']
      timestamp:
        type: string
        format: date-time
        description: Timestamp of history record.
  Pulse:
    type: object
    properties:
      bpm:
        type: number
        format: double
        description: Beat-per-minute within an interval.
      timestamp:
        type: string
        format: date-time
        description: Timestamp of recorded pulse.
  Channel:
    type: object
    properties:
      channel_id:
        type: integer
        format: int32
        description: >-
          Unique identifier representing a Communication Channel.
      channel_name:
        type: string
        description: Name of the communication channel, such as 'Team Leader'.

  Message:
    type: object
    properties:
      message_id:
        type: integer
        format: int32
        description: >-
          Unique identifier representing a message between two users
      sender:
        type: string
        description: sender of the message.
      receiver:
        type: string
        description: receiver of the message.
      text:
        type: string
        description: text content of the image.
      image:
        type: string
        description: Base64 encoded image.
      video:
        type: string
        description: Base64 encoded video.
      timestamp:
        type: string
        format: date-time
        description: time when the message is sent.
  Notification:
    type: object
    properties:
      notification_id:
        type: integer
        format: int32
        description: Unique identifier representing a notification
      sender:
        type: string
        description: sender of the notification.
      receiver:
        type: string
        description: receiver of the notification.
      notification_type:
        type: string
        description: type of the notification (e.g. incoming call, new message)
      timestamp:
        type: string
        format: date-time
        description: time when the notification is sent.
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string